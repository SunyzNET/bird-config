function transit_import_filter(int ASN) -> bool {
    if is_invalid() then return false;
    lc_add_in(ASN, 1);
    bgp_local_pref = 100;
    return true;
}

function transit_export_filter(int ASN) -> bool {
    if is_invalid() then return false;
    if (!is_self_route() && !is_downstream_route()) then return false;
    lc_export(ASN);
    return true;
}

# Not Yet Supported
# function downstream_import_filter(int ASN) -> bool {
#     if !is_valid() then return false;
#     if !is_downstream_route() then return false;
#     lc_add_in(ASN, 2);
#     return true;
# }

# Not Yet Supported
# function downstream_export_filter(int ASN) -> bool {
#     if !is_valid() then return false;
#     return true;
# }

function ixp_import_filter(int ASN) -> bool {
    if is_invalid() then return false;
    lc_add_in(ASN, 3);
    bgp_local_pref = 100;
    return true;
}

function ixp_export_filter(int ASN) -> bool {
    if is_invalid() then return false;
    if (!is_self_route() && !is_downstream_route()) then return false;
    lc_export(ASN);
    return true;
}

function peer_import_filter(int ASN) -> bool {
    if is_invalid() then return false;
    lc_add_in(ASN, 4);
    return true;
}

function peer_export_filter(int ASN) -> bool {
    if is_invalid() then return false;
    if (!is_self_route() && !is_downstream_route()) then return false;
    lc_export(ASN);
    return true;
}

function collector_export_filter() -> bool {
    if is_invalid() then return false;
    return true;
}
